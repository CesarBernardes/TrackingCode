import FWCore.ParameterSet.Config as cms

anaTrack = cms.EDAnalyzer('TrackAnalyzer',
                          doTrack = cms.bool(True),
                          doTrackExtra = cms.bool(False),
                          trackPtMin = cms.double(0.1),
                          simTrackPtMin = cms.double(0.1),
                          vertexSrc = cms.vstring(['offlinePrimaryVertices']),
                          trackSrc = cms.InputTag('generalTracks'),
                          mvaSrc = cms.InputTag('generalTracks','MVAVals'),
                          particleSrc = cms.InputTag('genParticles'),
                          pfCandSrc = cms.InputTag('particleFlow'),
			  beamSpotSrc = cms.InputTag('offlineBeamSpot'),
                          doPFMatching = cms.bool(True),
                          doSimTrack = cms.bool(True), 
                          doSimVertex = cms.bool(True), 
                          doHighestPtVertex = cms.bool(True), 
                          fillSimTrack = cms.bool(True),                         
                          doDeDx = cms.bool(False),
                          doDebug = cms.bool(False),                          
                          useQuality = cms.bool(False),
                          qualityStrings = cms.vstring(['highPurity','tight','loose']),
                          tpFakeSrc = cms.InputTag('mix','MergedTrackTruth'),
                          tpEffSrc = cms.InputTag('mix','MergedTrackTruth'),
                          associatorMap = cms.InputTag('tpRecoAssocGeneralTracks'),
                          doMVA = cms.bool(False),
                          doTrackVtxWImpPar = cms.bool(True),
                          trackVtxMaxDistance = cms.double(3.0),
                          qualityString = cms.string("highPurity"),
                          fiducialCut = cms.bool(False),
                          tpVtxSrc = cms.InputTag("mix","MergedTrackTruth"),
                          )
